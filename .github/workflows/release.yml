name: Release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      bump:
        description: 'Version bump (patch, minor, major, rc, beta)'
        required: true
        default: 'patch'

jobs:
  tag-and-release:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - name: Install Lean toolchain
        run: |
          curl https://raw.githubusercontent.com/leanprover/elan/master/elan-init.sh -sSf | sh -s -- -y --default-toolchain $(cat lean-toolchain)
          echo "$HOME/.elan/bin" >> $GITHUB_PATH
      - name: Build C object & library
        run: |
          make all
      - name: Package artifacts
        run: |
          VER_TAG="${GITHUB_REF#refs/tags/}"
          VER="${VER_TAG#v}"
          mkdir -p dist
          tar -czf dist/websocket-lean-${VER}-src.tgz \
            README.md LICENSE lakefile.lean lean-toolchain VERSION WebSocket c/ws_socket.c
          # Optionally include compiled objects (Linux)
          tar -czf dist/websocket-lean-${VER}-linux-amd64-bin.tgz build/lib build/bin c/ws_socket.o || true

      - name: Extract version from tag
        id: ver
        run: |
          TAG="${GITHUB_REF#refs/tags/}"
          VER="${TAG#v}"
          echo "version=$VER" >> $GITHUB_OUTPUT
          echo "$VER" > VERSION

      - name: Update lakefile version (if needed)
        run: |
          VER=${{ steps.ver.outputs.version }}
          sed -i -E "s/version := v!\"[0-9]+\.[0-9]+\.[0-9]+.*\"/version := v!\"${VER}\"/" lakefile.lean
          if git diff --quiet lakefile.lean VERSION; then
            echo "No version change in lakefile needed"
          else
            git config user.name "github-actions"
            git config user.email "github-actions@users.noreply.github.com"
            git add lakefile.lean VERSION
            git commit -m "chore: sync version ${VER}"
            git push
          fi

      - name: Generate release notes
        id: notes
        uses: release-drafter/release-drafter@v6
        with:
          disable-autolabeler: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: WebSocket Lean ${{ steps.ver.outputs.version }}
          body: ${{ steps.notes.outputs.body || 'Automated release.' }}
          files: |
            dist/*.tgz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  bump-and-tag:
    if: github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - name: Read current version
        id: cur
        run: |
          CUR=$(cat VERSION | tr -d '\n')
          echo "current=$CUR" >> $GITHUB_OUTPUT
      - name: Compute next version
        id: next
        run: |
          BUMP=${{ github.event.inputs.bump }}
          CUR=${{ steps.cur.outputs.current }}
          MAJOR=$(echo $CUR | cut -d. -f1)
          MINOR=$(echo $CUR | cut -d. -f2)
          PATCH=$(echo $CUR | cut -d. -f3)
          case "$BUMP" in
            major) MAJOR=$((MAJOR+1)); MINOR=0; PATCH=0 ;;
            minor) MINOR=$((MINOR+1)); PATCH=0 ;;
            patch) PATCH=$((PATCH+1)) ;;
            *) echo "Unsupported bump: $BUMP"; exit 1 ;;
          esac
          NEXT="${MAJOR}.${MINOR}.${PATCH}"
          echo "next=$NEXT" >> $GITHUB_OUTPUT
      - name: Update VERSION & lakefile
        run: |
          NEXT=${{ steps.next.outputs.next }}
          echo "$NEXT" > VERSION
          sed -i -E "s/version := v!\"[0-9]+\.[0-9]+\.[0-9]+.*\"/version := v!\"${NEXT}\"/" lakefile.lean
      - name: Commit and tag
        run: |
          NEXT=${{ steps.next.outputs.next }}
          git config user.name "github-actions"
          git config user.email "github-actions@users.noreply.github.com"
          git add VERSION lakefile.lean
          git commit -m "chore: bump version to ${NEXT}"
          git tag v${NEXT}
          git push --follow-tags
